<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 四种方式注入bean-->
    <bean name="clientController" class="com.example.text.bean.ClientController">
        <property name="clientService" ref="clientService"></property>
        <constructor-arg name="clientConstruct" ref="clientConstruct"></constructor-arg>
        <property name="factoryDao" ref="factoryDao"></property>
        <property name="factoryService" ref="factoryService"></property>
    </bean>

    <!-- set方法初始化bean -->
    <bean id = "clientService" class="com.example.text.bean.ClientService"></bean>
    <!-- 构造方法初始haunt-->
    <bean id = "clientConstruct" class="com.example.text.bean.ClientConstruct"></bean>

    <!-- 静态工厂初始化bean-->
    <bean name="factoryDao" class="com.example.text.bean.static_factory.Factory" factory-method="getStaticFactoryDao"></bean>
    <!-- 实例工厂初始化bean-->
    <bean name="factory" class="com.example.text.bean.static_factory.Factory"></bean>
    <bean id="factoryService" factory-bean="factory" factory-method="getFactoryService"></bean>


    <!--<bean id="beanPostProcessor" class="com.example.text.example.MyBeanPostProcessor">-->
    <!--</bean>-->
    <!--<bean id="instantiationAwareBeanPostProcessor" class="com.example.text.example.MyInstantiationAwareBeanPostProcessor">-->
    <!--</bean>-->
    <!--<bean id="beanFactoryPostProcessor" class="com.example.text.example.MyBeanFactoryPostProcessor">-->
    <!--</bean>-->
    <!--<bean id="person" class="com.example.text.example.Person" init-method="myInit" destroy-method="myDestory" scope="singleton" p:name="张三" p:address="广州" p:phone="15900000000"/>-->
</beans>